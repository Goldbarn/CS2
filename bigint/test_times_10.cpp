// bigint Test Program
//
// Tests:  times_10, uses ==
//
// NEED TO IMPLEMENT
// 
#include <iostream>
#include <cassert>
#include "bigint.hpp"

//===========================================================================
int main () {
    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(3);
        
        // Test 
        bi = bi.times10(0);

        // Verify
        assert(bi == 3);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(1);
        
        // Test 
        bi = bi.times10(10);

        // Verify
        assert(bi == "10000000000");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi("9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");
        
        // Test 
        bi = bi.times10(1);

        // Verify
        assert(bi == "99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(0);
        
        // Test 
        bi = bi.times10(2);

        // Verify
        assert(bi == 0);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(3657);
        
        // Test 
        bi = bi.times10(5);

        // Verify
        assert(bi == 365700000);
    }
    
    //Add test cases as needed.

    std::cout << "Done testing times_10" << std::endl;
    return 0;
}

